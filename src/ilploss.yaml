seed_everything: 42

data:
  class_path: ilploss.data.BaseDataModule
  init_args:
    data_path: data/random/dense/16_dim/1_const/0/dataset.pt
    splits:
      train: 1500
      val: 100
      test: 1000
    num_validate_train: 100
    batch_sizes:
      train: 10
      val: 100
      test: 1000
    num_workers: 4

model:
  class_path: ilploss.models.ILPModel
  init_args:
    core:
      class_path: ilploss.cores.SolverFreeCore
      init_args:
        encoder:
          class_path: ilploss.encoders.DisjointEncoder
          init_args:
            ab_encoder:
              class_path: ilploss.encoders.StaticABEncoder
              init_args:
                num_vars: 16
                num_constrs: 16

            c_encoder:
              class_path: ilploss.encoders.IdentityCEncoder

        known_ab_encoder:
          class_path: ilploss.encoders.LUToABEncoder
          init_args:
            lu_encoder:
              class_path: ilploss.encoders.StaticLUEncoder
              init_args:
                num_vars: 16
                lb: -5.0
                ub: 5.0

        sampler:
          class_path: ilploss.samplers.SamplerList
          init_args:
            samplers:
              - class_path: ilploss.samplers.NbrSampler
              - class_path: ilploss.samplers.KHopSampler
                init_args:
                  num_hops: 2
                  num_samples: 16
              - class_path: ilploss.samplers.KHopSampler
                init_args:
                  num_hops: 3
                  num_samples: 16
              - class_path: ilploss.samplers.KHopSampler
                init_args:
                  num_hops: 4
                  num_samples: 16
              - class_path: ilploss.samplers.RandIntNbrWrapper
                init_args:
                  sampler:
                    class_path: ilploss.samplers.ProjSampler

        criterion:
          class_path: ilploss.losses.ILPLoss
          init_args:
            balancer:
              class_path: ilploss.losses.CoVBalancer
              init_args:
                num_losses: 3
            pos_margin: 0.01
            neg_margin: 0.01

    solver:
      class_path: ilploss.ilp.ILPSolve
      init_args:
        vtype: I
        num_workers: 10

    optimizer:
      class_path: torch.optim.AdamW

    lr_scheduler:
      class_path: torch.optim.lr_scheduler.CyclicLR
      init_args:
        base_lr: 0.0
        max_lr: 1.0e-3
        step_size_up: 1500
        cycle_momentum: false
      config:
        interval: step

    temp_scheduler:
      class_path: torch.optim.lr_scheduler.ReduceLROnPlateau
      init_args:
        mode: max
        factor: 0.1
        patience: 4
      config:
        monitor: val/acc/idv
        interval: epoch
        frequency: 20
      init: 1.0

trainer:
  max_epochs: 1_000_000
  callbacks:
    - class_path: pytorch_lightning.callbacks.RichModelSummary
    - class_path: pytorch_lightning.callbacks.RichProgressBar
    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        monitor: val/acc/idv
        patience: 20
        mode: max

  accelerator: gpu
  devices: 1
  auto_select_gpus: true
  precision: 16

  num_sanity_val_steps: 0
  check_val_every_n_epoch: 20

